{"mappings":"A,S,E,C,E,O,G,E,U,C,E,O,C,C,C,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,SCiBA,SAAS,aAAa,CAAC,SAAS,gBAAgB,CAAC,SAAU,SAAU,CAAK,EACxE,EAAM,cAAc,GAEpB,IAAM,EAAa,SAAS,IAAI,CAAC,QAAQ,CAAC,KAAQ,CAAC,KAAK,EAClD,EAAO,SAAS,IAAI,CAAC,QAAQ,CAAC,IAAO,CAAC,KAAK,EAC3C,EAAS,SAAS,IAAI,CAAC,QAAQ,CAAC,MAAS,CAAC,KAAK,EAErD,GAAI,MAAM,IAAe,MAAM,IAAS,MAAM,GAAS,CACrD,AAAA,EAAA,GAAS,MAAM,CAAC,OAAO,CAAC,iDACxB,MACF,CAEA,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,IAI1B,AAcJ,CAAA,SAAuB,CAAQ,CAAE,CAAK,EACpC,OAAO,IAAI,QAAQ,CAAC,EAAS,KAC3B,IAAM,EAAgB,KAAK,MAAM,GAAK,GAEtC,WAAW,KACT,IAAM,EAAS,CAAE,SAAA,EAAU,MAAA,CAAM,EAE7B,EACF,EAAQ,GAER,EAAO,EAEX,EAAG,EACL,EACF,CAAA,EA/BqB,EAAI,EACP,EAAa,EAAI,GAG5B,IAAI,CAAC,CAAC,CAAA,SAAE,CAAQ,CAAA,MAAE,CAAK,CAAE,IACxB,AAAA,EAAA,GAAS,MAAM,CAAC,OAAO,CACrB,CAAC,QAAQ,EAAE,EAAS,qBAAqB,EAAE,EAAM,EAAE,CAAC,CAExD,GACC,KAAK,CAAC,CAAC,CAAA,SAAE,CAAQ,CAAA,MAAE,CAAK,CAAE,IACzB,AAAA,EAAA,GAAS,MAAM,CAAC,OAAO,CACrB,CAAC,QAAQ,EAAE,EAAS,qBAAqB,EAAE,EAAM,EAAE,CAAC,CAExD,EAEN","sources":["<anon>","src/js/03-promises.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n// в документе есть разметка формы, в поля которой, пользователь вводит задержку\n// шаг увеличения задержки и количество повторений промисов, которые необходимо\n// создать\n// написать скрипт, который при сабмите вызовет функцию столько раз, сколько\n// было указано в поле amount\n// при каждом вызове нужно передать функции номер создаваемого промиса position\n// и задержку, учитывая введенную пользователем первую задержку delay и шаг step\n// нужно дополнить кон функции, что бы она возвращала один промис, который\n// выполняется или отклоняется через delay времени.\n// значением промиса должен быть объект, в котором будут свойства position и delay\n// со значениями одноименных параметров\n\nvar $1GAPJ = parcelRequire(\"1GAPJ\");\ndocument.querySelector(\".form\").addEventListener(\"submit\", function(event) {\n    event.preventDefault();\n    const firstDelay = parseInt(this.elements[\"delay\"].value);\n    const step = parseInt(this.elements[\"step\"].value);\n    const amount = parseInt(this.elements[\"amount\"].value);\n    if (isNaN(firstDelay) || isNaN(step) || isNaN(amount)) {\n        (0, (/*@__PURE__*/$parcel$interopDefault($1GAPJ))).Notify.failure(\"Please fill in all fields with valid numbers.\");\n        return;\n    }\n    for(let i = 0; i < amount; i++){\n        const position = i + 1;\n        const delay = firstDelay + i * step;\n        $47d4ff9957288465$var$createPromise(position, delay).then(({ position: position, delay: delay })=>{\n            (0, (/*@__PURE__*/$parcel$interopDefault($1GAPJ))).Notify.success(`Promise ${position} resolved with delay ${delay}ms`);\n        }).catch(({ position: position, delay: delay })=>{\n            (0, (/*@__PURE__*/$parcel$interopDefault($1GAPJ))).Notify.failure(`Promise ${position} rejected with delay ${delay}ms`);\n        });\n    }\n});\nfunction $47d4ff9957288465$var$createPromise(position, delay) {\n    return new Promise((resolve, reject)=>{\n        const shouldResolve = Math.random() > 0.3;\n        setTimeout(()=>{\n            const result = {\n                position: position,\n                delay: delay\n            };\n            if (shouldResolve) resolve(result);\n            else reject(result);\n        }, delay);\n    });\n}\n\n\n//# sourceMappingURL=03-promises.205d0532.js.map\n","// в документе есть разметка формы, в поля которой, пользователь вводит задержку\n// шаг увеличения задержки и количество повторений промисов, которые необходимо\n// создать\n\n// написать скрипт, который при сабмите вызовет функцию столько раз, сколько\n// было указано в поле amount\n// при каждом вызове нужно передать функции номер создаваемого промиса position\n// и задержку, учитывая введенную пользователем первую задержку delay и шаг step\n\n// нужно дополнить кон функции, что бы она возвращала один промис, который\n// выполняется или отклоняется через delay времени.\n\n// значением промиса должен быть объект, в котором будут свойства position и delay\n// со значениями одноименных параметров\n\nimport Notiflix from 'notiflix';\n\ndocument.querySelector('.form').addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const firstDelay = parseInt(this.elements['delay'].value);\n  const step = parseInt(this.elements['step'].value);\n  const amount = parseInt(this.elements['amount'].value);\n\n  if (isNaN(firstDelay) || isNaN(step) || isNaN(amount)) {\n    Notiflix.Notify.failure('Please fill in all fields with valid numbers.');\n    return;\n  }\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const delay = firstDelay + i * step;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `Promise ${position} resolved with delay ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `Promise ${position} rejected with delay ${delay}ms`\n        );\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      const result = { position, delay };\n\n      if (shouldResolve) {\n        resolve(result);\n      } else {\n        reject(result);\n      }\n    }, delay);\n  });\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$1GAPJ","document","querySelector","addEventListener","event","preventDefault","firstDelay","parseInt","elements","value","step","amount","isNaN","Notify","failure","i","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","result","then","success","catch"],"version":3,"file":"03-promises.205d0532.js.map"}